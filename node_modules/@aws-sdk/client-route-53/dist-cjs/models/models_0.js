"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryLoggingConfigAlreadyExists = exports.NoSuchCloudWatchLogsLogGroup = exports.InsufficientCloudWatchLogsResourcePolicy = exports.TooManyKeySigningKeys = exports.KeySigningKeyAlreadyExists = exports.InvalidKeySigningKeyName = exports.InvalidArgument = exports.TooManyHostedZones = exports.NoSuchDelegationSet = exports.InvalidDomainName = exports.HostedZoneAlreadyExists = exports.DelegationSetNotReusable = exports.DelegationSetNotAvailable = exports.TooManyHealthChecks = exports.HealthCheckAlreadyExists = exports.Statistic = exports.ComparisonOperator = exports.HealthCheckType = exports.HealthCheckRegion = exports.InsufficientDataHealthStatus = exports.CidrCollectionAlreadyExistsException = exports.ThrottlingException = exports.TagResourceType = exports.NoSuchHealthCheck = exports.InvalidChangeBatch = exports.RRType = exports.ResourceRecordSetRegion = exports.ResourceRecordSetFailover = exports.ChangeAction = exports.NoSuchCidrCollectionException = exports.CidrCollectionVersionMismatchException = exports.CidrBlockInUseException = exports.CidrCollectionChangeAction = exports.PublicZoneVPCAssociation = exports.PriorRequestNotComplete = exports.NotAuthorizedException = exports.NoSuchHostedZone = exports.LimitsExceeded = exports.InvalidVPCId = exports.ConflictingDomainExists = exports.VPCRegion = exports.CloudWatchRegion = exports.NoSuchKeySigningKey = exports.InvalidSigningStatus = exports.InvalidKMSArn = exports.InvalidKeySigningKeyStatus = exports.InvalidInput = exports.ConcurrentModification = exports.ChangeStatus = exports.AccountLimitType = void 0;
exports.CidrRoutingConfigFilterSensitiveLog = exports.ChangeCidrCollectionResponseFilterSensitiveLog = exports.ChangeCidrCollectionRequestFilterSensitiveLog = exports.CidrCollectionChangeFilterSensitiveLog = exports.AssociateVPCWithHostedZoneResponseFilterSensitiveLog = exports.AssociateVPCWithHostedZoneRequestFilterSensitiveLog = exports.VPCFilterSensitiveLog = exports.AliasTargetFilterSensitiveLog = exports.AlarmIdentifierFilterSensitiveLog = exports.ActivateKeySigningKeyResponseFilterSensitiveLog = exports.ChangeInfoFilterSensitiveLog = exports.ActivateKeySigningKeyRequestFilterSensitiveLog = exports.AccountLimitFilterSensitiveLog = exports.ConflictingTypes = exports.ResettableElementName = exports.HealthCheckVersionMismatch = exports.InvalidPaginationToken = exports.NoSuchCidrLocationException = exports.ReusableDelegationSetLimitType = exports.HostedZoneNotPrivate = exports.HostedZoneLimitType = exports.IncompatibleVersion = exports.NoSuchGeoLocation = exports.NoSuchChange = exports.KeySigningKeyWithActiveStatusNotFound = exports.HostedZonePartiallyDelegated = exports.VPCAssociationNotFound = exports.LastVPCAssociation = exports.DNSSECNotFound = exports.VPCAssociationAuthorizationNotFound = exports.NoSuchTrafficPolicyInstance = exports.TrafficPolicyInUse = exports.DelegationSetInUse = exports.NoSuchQueryLoggingConfig = exports.HostedZoneNotEmpty = exports.HealthCheckInUse = exports.CidrCollectionInUseException = exports.KeySigningKeyInUse = exports.KeySigningKeyInParentDSRecord = exports.TooManyVPCAssociationAuthorizations = exports.TooManyTrafficPolicyVersionsForCurrentPolicy = exports.TrafficPolicyInstanceAlreadyExists = exports.TooManyTrafficPolicyInstances = exports.NoSuchTrafficPolicy = exports.TrafficPolicyAlreadyExists = exports.TooManyTrafficPolicies = exports.InvalidTrafficPolicyDocument = exports.HostedZoneNotFound = exports.DelegationSetAlreadyReusable = exports.DelegationSetAlreadyCreated = void 0;
exports.DeleteHostedZoneRequestFilterSensitiveLog = exports.DeleteHealthCheckResponseFilterSensitiveLog = exports.DeleteHealthCheckRequestFilterSensitiveLog = exports.DeleteCidrCollectionResponseFilterSensitiveLog = exports.DeleteCidrCollectionRequestFilterSensitiveLog = exports.DeactivateKeySigningKeyResponseFilterSensitiveLog = exports.DeactivateKeySigningKeyRequestFilterSensitiveLog = exports.CreateVPCAssociationAuthorizationResponseFilterSensitiveLog = exports.CreateVPCAssociationAuthorizationRequestFilterSensitiveLog = exports.CreateTrafficPolicyVersionResponseFilterSensitiveLog = exports.CreateTrafficPolicyVersionRequestFilterSensitiveLog = exports.CreateTrafficPolicyInstanceResponseFilterSensitiveLog = exports.TrafficPolicyInstanceFilterSensitiveLog = exports.CreateTrafficPolicyInstanceRequestFilterSensitiveLog = exports.CreateTrafficPolicyResponseFilterSensitiveLog = exports.TrafficPolicyFilterSensitiveLog = exports.CreateTrafficPolicyRequestFilterSensitiveLog = exports.CreateReusableDelegationSetResponseFilterSensitiveLog = exports.CreateReusableDelegationSetRequestFilterSensitiveLog = exports.CreateQueryLoggingConfigResponseFilterSensitiveLog = exports.QueryLoggingConfigFilterSensitiveLog = exports.CreateQueryLoggingConfigRequestFilterSensitiveLog = exports.CreateKeySigningKeyResponseFilterSensitiveLog = exports.KeySigningKeyFilterSensitiveLog = exports.CreateKeySigningKeyRequestFilterSensitiveLog = exports.CreateHostedZoneResponseFilterSensitiveLog = exports.HostedZoneFilterSensitiveLog = exports.DelegationSetFilterSensitiveLog = exports.CreateHostedZoneRequestFilterSensitiveLog = exports.HostedZoneConfigFilterSensitiveLog = exports.CreateHealthCheckResponseFilterSensitiveLog = exports.HealthCheckFilterSensitiveLog = exports.LinkedServiceFilterSensitiveLog = exports.CloudWatchAlarmConfigurationFilterSensitiveLog = exports.DimensionFilterSensitiveLog = exports.CreateHealthCheckRequestFilterSensitiveLog = exports.HealthCheckConfigFilterSensitiveLog = exports.CreateCidrCollectionResponseFilterSensitiveLog = exports.CidrCollectionFilterSensitiveLog = exports.CreateCidrCollectionRequestFilterSensitiveLog = exports.ChangeTagsForResourceResponseFilterSensitiveLog = exports.ChangeTagsForResourceRequestFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.ChangeResourceRecordSetsResponseFilterSensitiveLog = exports.ChangeResourceRecordSetsRequestFilterSensitiveLog = exports.ChangeBatchFilterSensitiveLog = exports.ChangeFilterSensitiveLog = exports.ResourceRecordSetFilterSensitiveLog = exports.ResourceRecordFilterSensitiveLog = exports.GeoLocationFilterSensitiveLog = void 0;
exports.GetQueryLoggingConfigResponseFilterSensitiveLog = exports.GetQueryLoggingConfigRequestFilterSensitiveLog = exports.GetHostedZoneLimitResponseFilterSensitiveLog = exports.HostedZoneLimitFilterSensitiveLog = exports.GetHostedZoneLimitRequestFilterSensitiveLog = exports.GetHostedZoneCountResponseFilterSensitiveLog = exports.GetHostedZoneCountRequestFilterSensitiveLog = exports.GetHostedZoneResponseFilterSensitiveLog = exports.GetHostedZoneRequestFilterSensitiveLog = exports.GetHealthCheckStatusResponseFilterSensitiveLog = exports.GetHealthCheckStatusRequestFilterSensitiveLog = exports.GetHealthCheckLastFailureReasonResponseFilterSensitiveLog = exports.HealthCheckObservationFilterSensitiveLog = exports.StatusReportFilterSensitiveLog = exports.GetHealthCheckLastFailureReasonRequestFilterSensitiveLog = exports.GetHealthCheckCountResponseFilterSensitiveLog = exports.GetHealthCheckCountRequestFilterSensitiveLog = exports.GetHealthCheckResponseFilterSensitiveLog = exports.GetHealthCheckRequestFilterSensitiveLog = exports.GetGeoLocationResponseFilterSensitiveLog = exports.GeoLocationDetailsFilterSensitiveLog = exports.GetGeoLocationRequestFilterSensitiveLog = exports.GetDNSSECResponseFilterSensitiveLog = exports.DNSSECStatusFilterSensitiveLog = exports.GetDNSSECRequestFilterSensitiveLog = exports.GetCheckerIpRangesResponseFilterSensitiveLog = exports.GetCheckerIpRangesRequestFilterSensitiveLog = exports.GetChangeResponseFilterSensitiveLog = exports.GetChangeRequestFilterSensitiveLog = exports.GetAccountLimitResponseFilterSensitiveLog = exports.GetAccountLimitRequestFilterSensitiveLog = exports.EnableHostedZoneDNSSECResponseFilterSensitiveLog = exports.EnableHostedZoneDNSSECRequestFilterSensitiveLog = exports.DisassociateVPCFromHostedZoneResponseFilterSensitiveLog = exports.DisassociateVPCFromHostedZoneRequestFilterSensitiveLog = exports.DisableHostedZoneDNSSECResponseFilterSensitiveLog = exports.DisableHostedZoneDNSSECRequestFilterSensitiveLog = exports.DeleteVPCAssociationAuthorizationResponseFilterSensitiveLog = exports.DeleteVPCAssociationAuthorizationRequestFilterSensitiveLog = exports.DeleteTrafficPolicyInstanceResponseFilterSensitiveLog = exports.DeleteTrafficPolicyInstanceRequestFilterSensitiveLog = exports.DeleteTrafficPolicyResponseFilterSensitiveLog = exports.DeleteTrafficPolicyRequestFilterSensitiveLog = exports.DeleteReusableDelegationSetResponseFilterSensitiveLog = exports.DeleteReusableDelegationSetRequestFilterSensitiveLog = exports.DeleteQueryLoggingConfigResponseFilterSensitiveLog = exports.DeleteQueryLoggingConfigRequestFilterSensitiveLog = exports.DeleteKeySigningKeyResponseFilterSensitiveLog = exports.DeleteKeySigningKeyRequestFilterSensitiveLog = exports.DeleteHostedZoneResponseFilterSensitiveLog = void 0;
exports.ListTrafficPolicyInstancesByHostedZoneResponseFilterSensitiveLog = exports.ListTrafficPolicyInstancesByHostedZoneRequestFilterSensitiveLog = exports.ListTrafficPolicyInstancesResponseFilterSensitiveLog = exports.ListTrafficPolicyInstancesRequestFilterSensitiveLog = exports.ListTrafficPoliciesResponseFilterSensitiveLog = exports.TrafficPolicySummaryFilterSensitiveLog = exports.ListTrafficPoliciesRequestFilterSensitiveLog = exports.ListTagsForResourcesResponseFilterSensitiveLog = exports.ListTagsForResourcesRequestFilterSensitiveLog = exports.ListTagsForResourceResponseFilterSensitiveLog = exports.ResourceTagSetFilterSensitiveLog = exports.ListTagsForResourceRequestFilterSensitiveLog = exports.ListReusableDelegationSetsResponseFilterSensitiveLog = exports.ListReusableDelegationSetsRequestFilterSensitiveLog = exports.ListResourceRecordSetsResponseFilterSensitiveLog = exports.ListResourceRecordSetsRequestFilterSensitiveLog = exports.ListQueryLoggingConfigsResponseFilterSensitiveLog = exports.ListQueryLoggingConfigsRequestFilterSensitiveLog = exports.ListHostedZonesByVPCResponseFilterSensitiveLog = exports.HostedZoneSummaryFilterSensitiveLog = exports.HostedZoneOwnerFilterSensitiveLog = exports.ListHostedZonesByVPCRequestFilterSensitiveLog = exports.ListHostedZonesByNameResponseFilterSensitiveLog = exports.ListHostedZonesByNameRequestFilterSensitiveLog = exports.ListHostedZonesResponseFilterSensitiveLog = exports.ListHostedZonesRequestFilterSensitiveLog = exports.ListHealthChecksResponseFilterSensitiveLog = exports.ListHealthChecksRequestFilterSensitiveLog = exports.ListGeoLocationsResponseFilterSensitiveLog = exports.ListGeoLocationsRequestFilterSensitiveLog = exports.ListCidrLocationsResponseFilterSensitiveLog = exports.LocationSummaryFilterSensitiveLog = exports.ListCidrLocationsRequestFilterSensitiveLog = exports.ListCidrCollectionsResponseFilterSensitiveLog = exports.CollectionSummaryFilterSensitiveLog = exports.ListCidrCollectionsRequestFilterSensitiveLog = exports.ListCidrBlocksResponseFilterSensitiveLog = exports.CidrBlockSummaryFilterSensitiveLog = exports.ListCidrBlocksRequestFilterSensitiveLog = exports.GetTrafficPolicyInstanceCountResponseFilterSensitiveLog = exports.GetTrafficPolicyInstanceCountRequestFilterSensitiveLog = exports.GetTrafficPolicyInstanceResponseFilterSensitiveLog = exports.GetTrafficPolicyInstanceRequestFilterSensitiveLog = exports.GetTrafficPolicyResponseFilterSensitiveLog = exports.GetTrafficPolicyRequestFilterSensitiveLog = exports.GetReusableDelegationSetLimitResponseFilterSensitiveLog = exports.ReusableDelegationSetLimitFilterSensitiveLog = exports.GetReusableDelegationSetLimitRequestFilterSensitiveLog = exports.GetReusableDelegationSetResponseFilterSensitiveLog = exports.GetReusableDelegationSetRequestFilterSensitiveLog = void 0;
exports.UpdateTrafficPolicyInstanceResponseFilterSensitiveLog = exports.UpdateTrafficPolicyInstanceRequestFilterSensitiveLog = exports.UpdateTrafficPolicyCommentResponseFilterSensitiveLog = exports.UpdateTrafficPolicyCommentRequestFilterSensitiveLog = exports.UpdateHostedZoneCommentResponseFilterSensitiveLog = exports.UpdateHostedZoneCommentRequestFilterSensitiveLog = exports.UpdateHealthCheckResponseFilterSensitiveLog = exports.UpdateHealthCheckRequestFilterSensitiveLog = exports.TestDNSAnswerResponseFilterSensitiveLog = exports.TestDNSAnswerRequestFilterSensitiveLog = exports.ListVPCAssociationAuthorizationsResponseFilterSensitiveLog = exports.ListVPCAssociationAuthorizationsRequestFilterSensitiveLog = exports.ListTrafficPolicyVersionsResponseFilterSensitiveLog = exports.ListTrafficPolicyVersionsRequestFilterSensitiveLog = exports.ListTrafficPolicyInstancesByPolicyResponseFilterSensitiveLog = exports.ListTrafficPolicyInstancesByPolicyRequestFilterSensitiveLog = void 0;
const Route53ServiceException_1 = require("./Route53ServiceException");
var AccountLimitType;
(function (AccountLimitType) {
    AccountLimitType["MAX_HEALTH_CHECKS_BY_OWNER"] = "MAX_HEALTH_CHECKS_BY_OWNER";
    AccountLimitType["MAX_HOSTED_ZONES_BY_OWNER"] = "MAX_HOSTED_ZONES_BY_OWNER";
    AccountLimitType["MAX_REUSABLE_DELEGATION_SETS_BY_OWNER"] = "MAX_REUSABLE_DELEGATION_SETS_BY_OWNER";
    AccountLimitType["MAX_TRAFFIC_POLICIES_BY_OWNER"] = "MAX_TRAFFIC_POLICIES_BY_OWNER";
    AccountLimitType["MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER"] = "MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER";
})(AccountLimitType = exports.AccountLimitType || (exports.AccountLimitType = {}));
var ChangeStatus;
(function (ChangeStatus) {
    ChangeStatus["INSYNC"] = "INSYNC";
    ChangeStatus["PENDING"] = "PENDING";
})(ChangeStatus = exports.ChangeStatus || (exports.ChangeStatus = {}));
class ConcurrentModification extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "ConcurrentModification",
            $fault: "client",
            ...opts,
        });
        this.name = "ConcurrentModification";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConcurrentModification.prototype);
    }
}
exports.ConcurrentModification = ConcurrentModification;
class InvalidInput extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "InvalidInput",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidInput";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidInput.prototype);
    }
}
exports.InvalidInput = InvalidInput;
class InvalidKeySigningKeyStatus extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "InvalidKeySigningKeyStatus",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidKeySigningKeyStatus";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidKeySigningKeyStatus.prototype);
    }
}
exports.InvalidKeySigningKeyStatus = InvalidKeySigningKeyStatus;
class InvalidKMSArn extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "InvalidKMSArn",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidKMSArn";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidKMSArn.prototype);
    }
}
exports.InvalidKMSArn = InvalidKMSArn;
class InvalidSigningStatus extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "InvalidSigningStatus",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSigningStatus";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSigningStatus.prototype);
    }
}
exports.InvalidSigningStatus = InvalidSigningStatus;
class NoSuchKeySigningKey extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "NoSuchKeySigningKey",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchKeySigningKey";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchKeySigningKey.prototype);
    }
}
exports.NoSuchKeySigningKey = NoSuchKeySigningKey;
var CloudWatchRegion;
(function (CloudWatchRegion) {
    CloudWatchRegion["af_south_1"] = "af-south-1";
    CloudWatchRegion["ap_east_1"] = "ap-east-1";
    CloudWatchRegion["ap_northeast_1"] = "ap-northeast-1";
    CloudWatchRegion["ap_northeast_2"] = "ap-northeast-2";
    CloudWatchRegion["ap_northeast_3"] = "ap-northeast-3";
    CloudWatchRegion["ap_south_1"] = "ap-south-1";
    CloudWatchRegion["ap_south_2"] = "ap-south-2";
    CloudWatchRegion["ap_southeast_1"] = "ap-southeast-1";
    CloudWatchRegion["ap_southeast_2"] = "ap-southeast-2";
    CloudWatchRegion["ap_southeast_3"] = "ap-southeast-3";
    CloudWatchRegion["ca_central_1"] = "ca-central-1";
    CloudWatchRegion["cn_north_1"] = "cn-north-1";
    CloudWatchRegion["cn_northwest_1"] = "cn-northwest-1";
    CloudWatchRegion["eu_central_1"] = "eu-central-1";
    CloudWatchRegion["eu_central_2"] = "eu-central-2";
    CloudWatchRegion["eu_north_1"] = "eu-north-1";
    CloudWatchRegion["eu_south_1"] = "eu-south-1";
    CloudWatchRegion["eu_south_2"] = "eu-south-2";
    CloudWatchRegion["eu_west_1"] = "eu-west-1";
    CloudWatchRegion["eu_west_2"] = "eu-west-2";
    CloudWatchRegion["eu_west_3"] = "eu-west-3";
    CloudWatchRegion["me_central_1"] = "me-central-1";
    CloudWatchRegion["me_south_1"] = "me-south-1";
    CloudWatchRegion["sa_east_1"] = "sa-east-1";
    CloudWatchRegion["us_east_1"] = "us-east-1";
    CloudWatchRegion["us_east_2"] = "us-east-2";
    CloudWatchRegion["us_gov_east_1"] = "us-gov-east-1";
    CloudWatchRegion["us_gov_west_1"] = "us-gov-west-1";
    CloudWatchRegion["us_iso_east_1"] = "us-iso-east-1";
    CloudWatchRegion["us_iso_west_1"] = "us-iso-west-1";
    CloudWatchRegion["us_isob_east_1"] = "us-isob-east-1";
    CloudWatchRegion["us_west_1"] = "us-west-1";
    CloudWatchRegion["us_west_2"] = "us-west-2";
})(CloudWatchRegion = exports.CloudWatchRegion || (exports.CloudWatchRegion = {}));
var VPCRegion;
(function (VPCRegion) {
    VPCRegion["af_south_1"] = "af-south-1";
    VPCRegion["ap_east_1"] = "ap-east-1";
    VPCRegion["ap_northeast_1"] = "ap-northeast-1";
    VPCRegion["ap_northeast_2"] = "ap-northeast-2";
    VPCRegion["ap_northeast_3"] = "ap-northeast-3";
    VPCRegion["ap_south_1"] = "ap-south-1";
    VPCRegion["ap_south_2"] = "ap-south-2";
    VPCRegion["ap_southeast_1"] = "ap-southeast-1";
    VPCRegion["ap_southeast_2"] = "ap-southeast-2";
    VPCRegion["ap_southeast_3"] = "ap-southeast-3";
    VPCRegion["ca_central_1"] = "ca-central-1";
    VPCRegion["cn_north_1"] = "cn-north-1";
    VPCRegion["eu_central_1"] = "eu-central-1";
    VPCRegion["eu_central_2"] = "eu-central-2";
    VPCRegion["eu_north_1"] = "eu-north-1";
    VPCRegion["eu_south_1"] = "eu-south-1";
    VPCRegion["eu_south_2"] = "eu-south-2";
    VPCRegion["eu_west_1"] = "eu-west-1";
    VPCRegion["eu_west_2"] = "eu-west-2";
    VPCRegion["eu_west_3"] = "eu-west-3";
    VPCRegion["me_central_1"] = "me-central-1";
    VPCRegion["me_south_1"] = "me-south-1";
    VPCRegion["sa_east_1"] = "sa-east-1";
    VPCRegion["us_east_1"] = "us-east-1";
    VPCRegion["us_east_2"] = "us-east-2";
    VPCRegion["us_gov_east_1"] = "us-gov-east-1";
    VPCRegion["us_gov_west_1"] = "us-gov-west-1";
    VPCRegion["us_iso_east_1"] = "us-iso-east-1";
    VPCRegion["us_iso_west_1"] = "us-iso-west-1";
    VPCRegion["us_isob_east_1"] = "us-isob-east-1";
    VPCRegion["us_west_1"] = "us-west-1";
    VPCRegion["us_west_2"] = "us-west-2";
})(VPCRegion = exports.VPCRegion || (exports.VPCRegion = {}));
class ConflictingDomainExists extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "ConflictingDomainExists",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictingDomainExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictingDomainExists.prototype);
    }
}
exports.ConflictingDomainExists = ConflictingDomainExists;
class InvalidVPCId extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "InvalidVPCId",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidVPCId";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidVPCId.prototype);
    }
}
exports.InvalidVPCId = InvalidVPCId;
class LimitsExceeded extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "LimitsExceeded",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitsExceeded";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitsExceeded.prototype);
    }
}
exports.LimitsExceeded = LimitsExceeded;
class NoSuchHostedZone extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "NoSuchHostedZone",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchHostedZone";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchHostedZone.prototype);
    }
}
exports.NoSuchHostedZone = NoSuchHostedZone;
class NotAuthorizedException extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "NotAuthorizedException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotAuthorizedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotAuthorizedException.prototype);
    }
}
exports.NotAuthorizedException = NotAuthorizedException;
class PriorRequestNotComplete extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "PriorRequestNotComplete",
            $fault: "client",
            ...opts,
        });
        this.name = "PriorRequestNotComplete";
        this.$fault = "client";
        Object.setPrototypeOf(this, PriorRequestNotComplete.prototype);
    }
}
exports.PriorRequestNotComplete = PriorRequestNotComplete;
class PublicZoneVPCAssociation extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "PublicZoneVPCAssociation",
            $fault: "client",
            ...opts,
        });
        this.name = "PublicZoneVPCAssociation";
        this.$fault = "client";
        Object.setPrototypeOf(this, PublicZoneVPCAssociation.prototype);
    }
}
exports.PublicZoneVPCAssociation = PublicZoneVPCAssociation;
var CidrCollectionChangeAction;
(function (CidrCollectionChangeAction) {
    CidrCollectionChangeAction["DELETE_IF_EXISTS"] = "DELETE_IF_EXISTS";
    CidrCollectionChangeAction["PUT"] = "PUT";
})(CidrCollectionChangeAction = exports.CidrCollectionChangeAction || (exports.CidrCollectionChangeAction = {}));
class CidrBlockInUseException extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "CidrBlockInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "CidrBlockInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CidrBlockInUseException.prototype);
        this.Message = opts.Message;
    }
}
exports.CidrBlockInUseException = CidrBlockInUseException;
class CidrCollectionVersionMismatchException extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "CidrCollectionVersionMismatchException",
            $fault: "client",
            ...opts,
        });
        this.name = "CidrCollectionVersionMismatchException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CidrCollectionVersionMismatchException.prototype);
        this.Message = opts.Message;
    }
}
exports.CidrCollectionVersionMismatchException = CidrCollectionVersionMismatchException;
class NoSuchCidrCollectionException extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "NoSuchCidrCollectionException",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchCidrCollectionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchCidrCollectionException.prototype);
        this.Message = opts.Message;
    }
}
exports.NoSuchCidrCollectionException = NoSuchCidrCollectionException;
var ChangeAction;
(function (ChangeAction) {
    ChangeAction["CREATE"] = "CREATE";
    ChangeAction["DELETE"] = "DELETE";
    ChangeAction["UPSERT"] = "UPSERT";
})(ChangeAction = exports.ChangeAction || (exports.ChangeAction = {}));
var ResourceRecordSetFailover;
(function (ResourceRecordSetFailover) {
    ResourceRecordSetFailover["PRIMARY"] = "PRIMARY";
    ResourceRecordSetFailover["SECONDARY"] = "SECONDARY";
})(ResourceRecordSetFailover = exports.ResourceRecordSetFailover || (exports.ResourceRecordSetFailover = {}));
var ResourceRecordSetRegion;
(function (ResourceRecordSetRegion) {
    ResourceRecordSetRegion["af_south_1"] = "af-south-1";
    ResourceRecordSetRegion["ap_east_1"] = "ap-east-1";
    ResourceRecordSetRegion["ap_northeast_1"] = "ap-northeast-1";
    ResourceRecordSetRegion["ap_northeast_2"] = "ap-northeast-2";
    ResourceRecordSetRegion["ap_northeast_3"] = "ap-northeast-3";
    ResourceRecordSetRegion["ap_south_1"] = "ap-south-1";
    ResourceRecordSetRegion["ap_south_2"] = "ap-south-2";
    ResourceRecordSetRegion["ap_southeast_1"] = "ap-southeast-1";
    ResourceRecordSetRegion["ap_southeast_2"] = "ap-southeast-2";
    ResourceRecordSetRegion["ap_southeast_3"] = "ap-southeast-3";
    ResourceRecordSetRegion["ca_central_1"] = "ca-central-1";
    ResourceRecordSetRegion["cn_north_1"] = "cn-north-1";
    ResourceRecordSetRegion["cn_northwest_1"] = "cn-northwest-1";
    ResourceRecordSetRegion["eu_central_1"] = "eu-central-1";
    ResourceRecordSetRegion["eu_central_2"] = "eu-central-2";
    ResourceRecordSetRegion["eu_north_1"] = "eu-north-1";
    ResourceRecordSetRegion["eu_south_1"] = "eu-south-1";
    ResourceRecordSetRegion["eu_south_2"] = "eu-south-2";
    ResourceRecordSetRegion["eu_west_1"] = "eu-west-1";
    ResourceRecordSetRegion["eu_west_2"] = "eu-west-2";
    ResourceRecordSetRegion["eu_west_3"] = "eu-west-3";
    ResourceRecordSetRegion["me_central_1"] = "me-central-1";
    ResourceRecordSetRegion["me_south_1"] = "me-south-1";
    ResourceRecordSetRegion["sa_east_1"] = "sa-east-1";
    ResourceRecordSetRegion["us_east_1"] = "us-east-1";
    ResourceRecordSetRegion["us_east_2"] = "us-east-2";
    ResourceRecordSetRegion["us_west_1"] = "us-west-1";
    ResourceRecordSetRegion["us_west_2"] = "us-west-2";
})(ResourceRecordSetRegion = exports.ResourceRecordSetRegion || (exports.ResourceRecordSetRegion = {}));
var RRType;
(function (RRType) {
    RRType["A"] = "A";
    RRType["AAAA"] = "AAAA";
    RRType["CAA"] = "CAA";
    RRType["CNAME"] = "CNAME";
    RRType["DS"] = "DS";
    RRType["MX"] = "MX";
    RRType["NAPTR"] = "NAPTR";
    RRType["NS"] = "NS";
    RRType["PTR"] = "PTR";
    RRType["SOA"] = "SOA";
    RRType["SPF"] = "SPF";
    RRType["SRV"] = "SRV";
    RRType["TXT"] = "TXT";
})(RRType = exports.RRType || (exports.RRType = {}));
class InvalidChangeBatch extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "InvalidChangeBatch",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidChangeBatch";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidChangeBatch.prototype);
        this.messages = opts.messages;
    }
}
exports.InvalidChangeBatch = InvalidChangeBatch;
class NoSuchHealthCheck extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "NoSuchHealthCheck",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchHealthCheck";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchHealthCheck.prototype);
    }
}
exports.NoSuchHealthCheck = NoSuchHealthCheck;
var TagResourceType;
(function (TagResourceType) {
    TagResourceType["healthcheck"] = "healthcheck";
    TagResourceType["hostedzone"] = "hostedzone";
})(TagResourceType = exports.TagResourceType || (exports.TagResourceType = {}));
class ThrottlingException extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
    }
}
exports.ThrottlingException = ThrottlingException;
class CidrCollectionAlreadyExistsException extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "CidrCollectionAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "CidrCollectionAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CidrCollectionAlreadyExistsException.prototype);
        this.Message = opts.Message;
    }
}
exports.CidrCollectionAlreadyExistsException = CidrCollectionAlreadyExistsException;
var InsufficientDataHealthStatus;
(function (InsufficientDataHealthStatus) {
    InsufficientDataHealthStatus["Healthy"] = "Healthy";
    InsufficientDataHealthStatus["LastKnownStatus"] = "LastKnownStatus";
    InsufficientDataHealthStatus["Unhealthy"] = "Unhealthy";
})(InsufficientDataHealthStatus = exports.InsufficientDataHealthStatus || (exports.InsufficientDataHealthStatus = {}));
var HealthCheckRegion;
(function (HealthCheckRegion) {
    HealthCheckRegion["ap_northeast_1"] = "ap-northeast-1";
    HealthCheckRegion["ap_southeast_1"] = "ap-southeast-1";
    HealthCheckRegion["ap_southeast_2"] = "ap-southeast-2";
    HealthCheckRegion["eu_west_1"] = "eu-west-1";
    HealthCheckRegion["sa_east_1"] = "sa-east-1";
    HealthCheckRegion["us_east_1"] = "us-east-1";
    HealthCheckRegion["us_west_1"] = "us-west-1";
    HealthCheckRegion["us_west_2"] = "us-west-2";
})(HealthCheckRegion = exports.HealthCheckRegion || (exports.HealthCheckRegion = {}));
var HealthCheckType;
(function (HealthCheckType) {
    HealthCheckType["CALCULATED"] = "CALCULATED";
    HealthCheckType["CLOUDWATCH_METRIC"] = "CLOUDWATCH_METRIC";
    HealthCheckType["HTTP"] = "HTTP";
    HealthCheckType["HTTPS"] = "HTTPS";
    HealthCheckType["HTTPS_STR_MATCH"] = "HTTPS_STR_MATCH";
    HealthCheckType["HTTP_STR_MATCH"] = "HTTP_STR_MATCH";
    HealthCheckType["RECOVERY_CONTROL"] = "RECOVERY_CONTROL";
    HealthCheckType["TCP"] = "TCP";
})(HealthCheckType = exports.HealthCheckType || (exports.HealthCheckType = {}));
var ComparisonOperator;
(function (ComparisonOperator) {
    ComparisonOperator["GreaterThanOrEqualToThreshold"] = "GreaterThanOrEqualToThreshold";
    ComparisonOperator["GreaterThanThreshold"] = "GreaterThanThreshold";
    ComparisonOperator["LessThanOrEqualToThreshold"] = "LessThanOrEqualToThreshold";
    ComparisonOperator["LessThanThreshold"] = "LessThanThreshold";
})(ComparisonOperator = exports.ComparisonOperator || (exports.ComparisonOperator = {}));
var Statistic;
(function (Statistic) {
    Statistic["Average"] = "Average";
    Statistic["Maximum"] = "Maximum";
    Statistic["Minimum"] = "Minimum";
    Statistic["SampleCount"] = "SampleCount";
    Statistic["Sum"] = "Sum";
})(Statistic = exports.Statistic || (exports.Statistic = {}));
class HealthCheckAlreadyExists extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "HealthCheckAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "HealthCheckAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, HealthCheckAlreadyExists.prototype);
    }
}
exports.HealthCheckAlreadyExists = HealthCheckAlreadyExists;
class TooManyHealthChecks extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "TooManyHealthChecks",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyHealthChecks";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyHealthChecks.prototype);
    }
}
exports.TooManyHealthChecks = TooManyHealthChecks;
class DelegationSetNotAvailable extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "DelegationSetNotAvailable",
            $fault: "client",
            ...opts,
        });
        this.name = "DelegationSetNotAvailable";
        this.$fault = "client";
        Object.setPrototypeOf(this, DelegationSetNotAvailable.prototype);
    }
}
exports.DelegationSetNotAvailable = DelegationSetNotAvailable;
class DelegationSetNotReusable extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "DelegationSetNotReusable",
            $fault: "client",
            ...opts,
        });
        this.name = "DelegationSetNotReusable";
        this.$fault = "client";
        Object.setPrototypeOf(this, DelegationSetNotReusable.prototype);
    }
}
exports.DelegationSetNotReusable = DelegationSetNotReusable;
class HostedZoneAlreadyExists extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "HostedZoneAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "HostedZoneAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, HostedZoneAlreadyExists.prototype);
    }
}
exports.HostedZoneAlreadyExists = HostedZoneAlreadyExists;
class InvalidDomainName extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "InvalidDomainName",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDomainName";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDomainName.prototype);
    }
}
exports.InvalidDomainName = InvalidDomainName;
class NoSuchDelegationSet extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "NoSuchDelegationSet",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchDelegationSet";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchDelegationSet.prototype);
    }
}
exports.NoSuchDelegationSet = NoSuchDelegationSet;
class TooManyHostedZones extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "TooManyHostedZones",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyHostedZones";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyHostedZones.prototype);
    }
}
exports.TooManyHostedZones = TooManyHostedZones;
class InvalidArgument extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "InvalidArgument",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidArgument";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidArgument.prototype);
    }
}
exports.InvalidArgument = InvalidArgument;
class InvalidKeySigningKeyName extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "InvalidKeySigningKeyName",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidKeySigningKeyName";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidKeySigningKeyName.prototype);
    }
}
exports.InvalidKeySigningKeyName = InvalidKeySigningKeyName;
class KeySigningKeyAlreadyExists extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "KeySigningKeyAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "KeySigningKeyAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, KeySigningKeyAlreadyExists.prototype);
    }
}
exports.KeySigningKeyAlreadyExists = KeySigningKeyAlreadyExists;
class TooManyKeySigningKeys extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "TooManyKeySigningKeys",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyKeySigningKeys";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyKeySigningKeys.prototype);
    }
}
exports.TooManyKeySigningKeys = TooManyKeySigningKeys;
class InsufficientCloudWatchLogsResourcePolicy extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "InsufficientCloudWatchLogsResourcePolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "InsufficientCloudWatchLogsResourcePolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, InsufficientCloudWatchLogsResourcePolicy.prototype);
    }
}
exports.InsufficientCloudWatchLogsResourcePolicy = InsufficientCloudWatchLogsResourcePolicy;
class NoSuchCloudWatchLogsLogGroup extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "NoSuchCloudWatchLogsLogGroup",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchCloudWatchLogsLogGroup";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchCloudWatchLogsLogGroup.prototype);
    }
}
exports.NoSuchCloudWatchLogsLogGroup = NoSuchCloudWatchLogsLogGroup;
class QueryLoggingConfigAlreadyExists extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "QueryLoggingConfigAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "QueryLoggingConfigAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, QueryLoggingConfigAlreadyExists.prototype);
    }
}
exports.QueryLoggingConfigAlreadyExists = QueryLoggingConfigAlreadyExists;
class DelegationSetAlreadyCreated extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "DelegationSetAlreadyCreated",
            $fault: "client",
            ...opts,
        });
        this.name = "DelegationSetAlreadyCreated";
        this.$fault = "client";
        Object.setPrototypeOf(this, DelegationSetAlreadyCreated.prototype);
    }
}
exports.DelegationSetAlreadyCreated = DelegationSetAlreadyCreated;
class DelegationSetAlreadyReusable extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "DelegationSetAlreadyReusable",
            $fault: "client",
            ...opts,
        });
        this.name = "DelegationSetAlreadyReusable";
        this.$fault = "client";
        Object.setPrototypeOf(this, DelegationSetAlreadyReusable.prototype);
    }
}
exports.DelegationSetAlreadyReusable = DelegationSetAlreadyReusable;
class HostedZoneNotFound extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "HostedZoneNotFound",
            $fault: "client",
            ...opts,
        });
        this.name = "HostedZoneNotFound";
        this.$fault = "client";
        Object.setPrototypeOf(this, HostedZoneNotFound.prototype);
    }
}
exports.HostedZoneNotFound = HostedZoneNotFound;
class InvalidTrafficPolicyDocument extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "InvalidTrafficPolicyDocument",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTrafficPolicyDocument";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTrafficPolicyDocument.prototype);
    }
}
exports.InvalidTrafficPolicyDocument = InvalidTrafficPolicyDocument;
class TooManyTrafficPolicies extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "TooManyTrafficPolicies",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTrafficPolicies";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTrafficPolicies.prototype);
    }
}
exports.TooManyTrafficPolicies = TooManyTrafficPolicies;
class TrafficPolicyAlreadyExists extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "TrafficPolicyAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "TrafficPolicyAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, TrafficPolicyAlreadyExists.prototype);
    }
}
exports.TrafficPolicyAlreadyExists = TrafficPolicyAlreadyExists;
class NoSuchTrafficPolicy extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "NoSuchTrafficPolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchTrafficPolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchTrafficPolicy.prototype);
    }
}
exports.NoSuchTrafficPolicy = NoSuchTrafficPolicy;
class TooManyTrafficPolicyInstances extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "TooManyTrafficPolicyInstances",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTrafficPolicyInstances";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTrafficPolicyInstances.prototype);
    }
}
exports.TooManyTrafficPolicyInstances = TooManyTrafficPolicyInstances;
class TrafficPolicyInstanceAlreadyExists extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "TrafficPolicyInstanceAlreadyExists",
            $fault: "client",
            ...opts,
        });
        this.name = "TrafficPolicyInstanceAlreadyExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, TrafficPolicyInstanceAlreadyExists.prototype);
    }
}
exports.TrafficPolicyInstanceAlreadyExists = TrafficPolicyInstanceAlreadyExists;
class TooManyTrafficPolicyVersionsForCurrentPolicy extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "TooManyTrafficPolicyVersionsForCurrentPolicy",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTrafficPolicyVersionsForCurrentPolicy";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTrafficPolicyVersionsForCurrentPolicy.prototype);
    }
}
exports.TooManyTrafficPolicyVersionsForCurrentPolicy = TooManyTrafficPolicyVersionsForCurrentPolicy;
class TooManyVPCAssociationAuthorizations extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "TooManyVPCAssociationAuthorizations",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyVPCAssociationAuthorizations";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyVPCAssociationAuthorizations.prototype);
    }
}
exports.TooManyVPCAssociationAuthorizations = TooManyVPCAssociationAuthorizations;
class KeySigningKeyInParentDSRecord extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "KeySigningKeyInParentDSRecord",
            $fault: "client",
            ...opts,
        });
        this.name = "KeySigningKeyInParentDSRecord";
        this.$fault = "client";
        Object.setPrototypeOf(this, KeySigningKeyInParentDSRecord.prototype);
    }
}
exports.KeySigningKeyInParentDSRecord = KeySigningKeyInParentDSRecord;
class KeySigningKeyInUse extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "KeySigningKeyInUse",
            $fault: "client",
            ...opts,
        });
        this.name = "KeySigningKeyInUse";
        this.$fault = "client";
        Object.setPrototypeOf(this, KeySigningKeyInUse.prototype);
    }
}
exports.KeySigningKeyInUse = KeySigningKeyInUse;
class CidrCollectionInUseException extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "CidrCollectionInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "CidrCollectionInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CidrCollectionInUseException.prototype);
        this.Message = opts.Message;
    }
}
exports.CidrCollectionInUseException = CidrCollectionInUseException;
class HealthCheckInUse extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "HealthCheckInUse",
            $fault: "client",
            ...opts,
        });
        this.name = "HealthCheckInUse";
        this.$fault = "client";
        Object.setPrototypeOf(this, HealthCheckInUse.prototype);
    }
}
exports.HealthCheckInUse = HealthCheckInUse;
class HostedZoneNotEmpty extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "HostedZoneNotEmpty",
            $fault: "client",
            ...opts,
        });
        this.name = "HostedZoneNotEmpty";
        this.$fault = "client";
        Object.setPrototypeOf(this, HostedZoneNotEmpty.prototype);
    }
}
exports.HostedZoneNotEmpty = HostedZoneNotEmpty;
class NoSuchQueryLoggingConfig extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "NoSuchQueryLoggingConfig",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchQueryLoggingConfig";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchQueryLoggingConfig.prototype);
    }
}
exports.NoSuchQueryLoggingConfig = NoSuchQueryLoggingConfig;
class DelegationSetInUse extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "DelegationSetInUse",
            $fault: "client",
            ...opts,
        });
        this.name = "DelegationSetInUse";
        this.$fault = "client";
        Object.setPrototypeOf(this, DelegationSetInUse.prototype);
    }
}
exports.DelegationSetInUse = DelegationSetInUse;
class TrafficPolicyInUse extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "TrafficPolicyInUse",
            $fault: "client",
            ...opts,
        });
        this.name = "TrafficPolicyInUse";
        this.$fault = "client";
        Object.setPrototypeOf(this, TrafficPolicyInUse.prototype);
    }
}
exports.TrafficPolicyInUse = TrafficPolicyInUse;
class NoSuchTrafficPolicyInstance extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "NoSuchTrafficPolicyInstance",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchTrafficPolicyInstance";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchTrafficPolicyInstance.prototype);
    }
}
exports.NoSuchTrafficPolicyInstance = NoSuchTrafficPolicyInstance;
class VPCAssociationAuthorizationNotFound extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "VPCAssociationAuthorizationNotFound",
            $fault: "client",
            ...opts,
        });
        this.name = "VPCAssociationAuthorizationNotFound";
        this.$fault = "client";
        Object.setPrototypeOf(this, VPCAssociationAuthorizationNotFound.prototype);
    }
}
exports.VPCAssociationAuthorizationNotFound = VPCAssociationAuthorizationNotFound;
class DNSSECNotFound extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "DNSSECNotFound",
            $fault: "client",
            ...opts,
        });
        this.name = "DNSSECNotFound";
        this.$fault = "client";
        Object.setPrototypeOf(this, DNSSECNotFound.prototype);
    }
}
exports.DNSSECNotFound = DNSSECNotFound;
class LastVPCAssociation extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "LastVPCAssociation",
            $fault: "client",
            ...opts,
        });
        this.name = "LastVPCAssociation";
        this.$fault = "client";
        Object.setPrototypeOf(this, LastVPCAssociation.prototype);
    }
}
exports.LastVPCAssociation = LastVPCAssociation;
class VPCAssociationNotFound extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "VPCAssociationNotFound",
            $fault: "client",
            ...opts,
        });
        this.name = "VPCAssociationNotFound";
        this.$fault = "client";
        Object.setPrototypeOf(this, VPCAssociationNotFound.prototype);
    }
}
exports.VPCAssociationNotFound = VPCAssociationNotFound;
class HostedZonePartiallyDelegated extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "HostedZonePartiallyDelegated",
            $fault: "client",
            ...opts,
        });
        this.name = "HostedZonePartiallyDelegated";
        this.$fault = "client";
        Object.setPrototypeOf(this, HostedZonePartiallyDelegated.prototype);
    }
}
exports.HostedZonePartiallyDelegated = HostedZonePartiallyDelegated;
class KeySigningKeyWithActiveStatusNotFound extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "KeySigningKeyWithActiveStatusNotFound",
            $fault: "client",
            ...opts,
        });
        this.name = "KeySigningKeyWithActiveStatusNotFound";
        this.$fault = "client";
        Object.setPrototypeOf(this, KeySigningKeyWithActiveStatusNotFound.prototype);
    }
}
exports.KeySigningKeyWithActiveStatusNotFound = KeySigningKeyWithActiveStatusNotFound;
class NoSuchChange extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "NoSuchChange",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchChange";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchChange.prototype);
    }
}
exports.NoSuchChange = NoSuchChange;
class NoSuchGeoLocation extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "NoSuchGeoLocation",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchGeoLocation";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchGeoLocation.prototype);
    }
}
exports.NoSuchGeoLocation = NoSuchGeoLocation;
class IncompatibleVersion extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "IncompatibleVersion",
            $fault: "client",
            ...opts,
        });
        this.name = "IncompatibleVersion";
        this.$fault = "client";
        Object.setPrototypeOf(this, IncompatibleVersion.prototype);
    }
}
exports.IncompatibleVersion = IncompatibleVersion;
var HostedZoneLimitType;
(function (HostedZoneLimitType) {
    HostedZoneLimitType["MAX_RRSETS_BY_ZONE"] = "MAX_RRSETS_BY_ZONE";
    HostedZoneLimitType["MAX_VPCS_ASSOCIATED_BY_ZONE"] = "MAX_VPCS_ASSOCIATED_BY_ZONE";
})(HostedZoneLimitType = exports.HostedZoneLimitType || (exports.HostedZoneLimitType = {}));
class HostedZoneNotPrivate extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "HostedZoneNotPrivate",
            $fault: "client",
            ...opts,
        });
        this.name = "HostedZoneNotPrivate";
        this.$fault = "client";
        Object.setPrototypeOf(this, HostedZoneNotPrivate.prototype);
    }
}
exports.HostedZoneNotPrivate = HostedZoneNotPrivate;
var ReusableDelegationSetLimitType;
(function (ReusableDelegationSetLimitType) {
    ReusableDelegationSetLimitType["MAX_ZONES_BY_REUSABLE_DELEGATION_SET"] = "MAX_ZONES_BY_REUSABLE_DELEGATION_SET";
})(ReusableDelegationSetLimitType = exports.ReusableDelegationSetLimitType || (exports.ReusableDelegationSetLimitType = {}));
class NoSuchCidrLocationException extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "NoSuchCidrLocationException",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchCidrLocationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchCidrLocationException.prototype);
        this.Message = opts.Message;
    }
}
exports.NoSuchCidrLocationException = NoSuchCidrLocationException;
class InvalidPaginationToken extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "InvalidPaginationToken",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidPaginationToken";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidPaginationToken.prototype);
    }
}
exports.InvalidPaginationToken = InvalidPaginationToken;
class HealthCheckVersionMismatch extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "HealthCheckVersionMismatch",
            $fault: "client",
            ...opts,
        });
        this.name = "HealthCheckVersionMismatch";
        this.$fault = "client";
        Object.setPrototypeOf(this, HealthCheckVersionMismatch.prototype);
    }
}
exports.HealthCheckVersionMismatch = HealthCheckVersionMismatch;
var ResettableElementName;
(function (ResettableElementName) {
    ResettableElementName["ChildHealthChecks"] = "ChildHealthChecks";
    ResettableElementName["FullyQualifiedDomainName"] = "FullyQualifiedDomainName";
    ResettableElementName["Regions"] = "Regions";
    ResettableElementName["ResourcePath"] = "ResourcePath";
})(ResettableElementName = exports.ResettableElementName || (exports.ResettableElementName = {}));
class ConflictingTypes extends Route53ServiceException_1.Route53ServiceException {
    constructor(opts) {
        super({
            name: "ConflictingTypes",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictingTypes";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictingTypes.prototype);
    }
}
exports.ConflictingTypes = ConflictingTypes;
const AccountLimitFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AccountLimitFilterSensitiveLog = AccountLimitFilterSensitiveLog;
const ActivateKeySigningKeyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActivateKeySigningKeyRequestFilterSensitiveLog = ActivateKeySigningKeyRequestFilterSensitiveLog;
const ChangeInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChangeInfoFilterSensitiveLog = ChangeInfoFilterSensitiveLog;
const ActivateKeySigningKeyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActivateKeySigningKeyResponseFilterSensitiveLog = ActivateKeySigningKeyResponseFilterSensitiveLog;
const AlarmIdentifierFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AlarmIdentifierFilterSensitiveLog = AlarmIdentifierFilterSensitiveLog;
const AliasTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AliasTargetFilterSensitiveLog = AliasTargetFilterSensitiveLog;
const VPCFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VPCFilterSensitiveLog = VPCFilterSensitiveLog;
const AssociateVPCWithHostedZoneRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateVPCWithHostedZoneRequestFilterSensitiveLog = AssociateVPCWithHostedZoneRequestFilterSensitiveLog;
const AssociateVPCWithHostedZoneResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateVPCWithHostedZoneResponseFilterSensitiveLog = AssociateVPCWithHostedZoneResponseFilterSensitiveLog;
const CidrCollectionChangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CidrCollectionChangeFilterSensitiveLog = CidrCollectionChangeFilterSensitiveLog;
const ChangeCidrCollectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChangeCidrCollectionRequestFilterSensitiveLog = ChangeCidrCollectionRequestFilterSensitiveLog;
const ChangeCidrCollectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChangeCidrCollectionResponseFilterSensitiveLog = ChangeCidrCollectionResponseFilterSensitiveLog;
const CidrRoutingConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CidrRoutingConfigFilterSensitiveLog = CidrRoutingConfigFilterSensitiveLog;
const GeoLocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GeoLocationFilterSensitiveLog = GeoLocationFilterSensitiveLog;
const ResourceRecordFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResourceRecordFilterSensitiveLog = ResourceRecordFilterSensitiveLog;
const ResourceRecordSetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResourceRecordSetFilterSensitiveLog = ResourceRecordSetFilterSensitiveLog;
const ChangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChangeFilterSensitiveLog = ChangeFilterSensitiveLog;
const ChangeBatchFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChangeBatchFilterSensitiveLog = ChangeBatchFilterSensitiveLog;
const ChangeResourceRecordSetsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChangeResourceRecordSetsRequestFilterSensitiveLog = ChangeResourceRecordSetsRequestFilterSensitiveLog;
const ChangeResourceRecordSetsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChangeResourceRecordSetsResponseFilterSensitiveLog = ChangeResourceRecordSetsResponseFilterSensitiveLog;
const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagFilterSensitiveLog = TagFilterSensitiveLog;
const ChangeTagsForResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChangeTagsForResourceRequestFilterSensitiveLog = ChangeTagsForResourceRequestFilterSensitiveLog;
const ChangeTagsForResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChangeTagsForResourceResponseFilterSensitiveLog = ChangeTagsForResourceResponseFilterSensitiveLog;
const CreateCidrCollectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCidrCollectionRequestFilterSensitiveLog = CreateCidrCollectionRequestFilterSensitiveLog;
const CidrCollectionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CidrCollectionFilterSensitiveLog = CidrCollectionFilterSensitiveLog;
const CreateCidrCollectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCidrCollectionResponseFilterSensitiveLog = CreateCidrCollectionResponseFilterSensitiveLog;
const HealthCheckConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HealthCheckConfigFilterSensitiveLog = HealthCheckConfigFilterSensitiveLog;
const CreateHealthCheckRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateHealthCheckRequestFilterSensitiveLog = CreateHealthCheckRequestFilterSensitiveLog;
const DimensionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DimensionFilterSensitiveLog = DimensionFilterSensitiveLog;
const CloudWatchAlarmConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CloudWatchAlarmConfigurationFilterSensitiveLog = CloudWatchAlarmConfigurationFilterSensitiveLog;
const LinkedServiceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LinkedServiceFilterSensitiveLog = LinkedServiceFilterSensitiveLog;
const HealthCheckFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HealthCheckFilterSensitiveLog = HealthCheckFilterSensitiveLog;
const CreateHealthCheckResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateHealthCheckResponseFilterSensitiveLog = CreateHealthCheckResponseFilterSensitiveLog;
const HostedZoneConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HostedZoneConfigFilterSensitiveLog = HostedZoneConfigFilterSensitiveLog;
const CreateHostedZoneRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateHostedZoneRequestFilterSensitiveLog = CreateHostedZoneRequestFilterSensitiveLog;
const DelegationSetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DelegationSetFilterSensitiveLog = DelegationSetFilterSensitiveLog;
const HostedZoneFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HostedZoneFilterSensitiveLog = HostedZoneFilterSensitiveLog;
const CreateHostedZoneResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateHostedZoneResponseFilterSensitiveLog = CreateHostedZoneResponseFilterSensitiveLog;
const CreateKeySigningKeyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateKeySigningKeyRequestFilterSensitiveLog = CreateKeySigningKeyRequestFilterSensitiveLog;
const KeySigningKeyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.KeySigningKeyFilterSensitiveLog = KeySigningKeyFilterSensitiveLog;
const CreateKeySigningKeyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateKeySigningKeyResponseFilterSensitiveLog = CreateKeySigningKeyResponseFilterSensitiveLog;
const CreateQueryLoggingConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateQueryLoggingConfigRequestFilterSensitiveLog = CreateQueryLoggingConfigRequestFilterSensitiveLog;
const QueryLoggingConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.QueryLoggingConfigFilterSensitiveLog = QueryLoggingConfigFilterSensitiveLog;
const CreateQueryLoggingConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateQueryLoggingConfigResponseFilterSensitiveLog = CreateQueryLoggingConfigResponseFilterSensitiveLog;
const CreateReusableDelegationSetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateReusableDelegationSetRequestFilterSensitiveLog = CreateReusableDelegationSetRequestFilterSensitiveLog;
const CreateReusableDelegationSetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateReusableDelegationSetResponseFilterSensitiveLog = CreateReusableDelegationSetResponseFilterSensitiveLog;
const CreateTrafficPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTrafficPolicyRequestFilterSensitiveLog = CreateTrafficPolicyRequestFilterSensitiveLog;
const TrafficPolicyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TrafficPolicyFilterSensitiveLog = TrafficPolicyFilterSensitiveLog;
const CreateTrafficPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTrafficPolicyResponseFilterSensitiveLog = CreateTrafficPolicyResponseFilterSensitiveLog;
const CreateTrafficPolicyInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTrafficPolicyInstanceRequestFilterSensitiveLog = CreateTrafficPolicyInstanceRequestFilterSensitiveLog;
const TrafficPolicyInstanceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TrafficPolicyInstanceFilterSensitiveLog = TrafficPolicyInstanceFilterSensitiveLog;
const CreateTrafficPolicyInstanceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTrafficPolicyInstanceResponseFilterSensitiveLog = CreateTrafficPolicyInstanceResponseFilterSensitiveLog;
const CreateTrafficPolicyVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTrafficPolicyVersionRequestFilterSensitiveLog = CreateTrafficPolicyVersionRequestFilterSensitiveLog;
const CreateTrafficPolicyVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTrafficPolicyVersionResponseFilterSensitiveLog = CreateTrafficPolicyVersionResponseFilterSensitiveLog;
const CreateVPCAssociationAuthorizationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVPCAssociationAuthorizationRequestFilterSensitiveLog = CreateVPCAssociationAuthorizationRequestFilterSensitiveLog;
const CreateVPCAssociationAuthorizationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateVPCAssociationAuthorizationResponseFilterSensitiveLog = CreateVPCAssociationAuthorizationResponseFilterSensitiveLog;
const DeactivateKeySigningKeyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeactivateKeySigningKeyRequestFilterSensitiveLog = DeactivateKeySigningKeyRequestFilterSensitiveLog;
const DeactivateKeySigningKeyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeactivateKeySigningKeyResponseFilterSensitiveLog = DeactivateKeySigningKeyResponseFilterSensitiveLog;
const DeleteCidrCollectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCidrCollectionRequestFilterSensitiveLog = DeleteCidrCollectionRequestFilterSensitiveLog;
const DeleteCidrCollectionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCidrCollectionResponseFilterSensitiveLog = DeleteCidrCollectionResponseFilterSensitiveLog;
const DeleteHealthCheckRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteHealthCheckRequestFilterSensitiveLog = DeleteHealthCheckRequestFilterSensitiveLog;
const DeleteHealthCheckResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteHealthCheckResponseFilterSensitiveLog = DeleteHealthCheckResponseFilterSensitiveLog;
const DeleteHostedZoneRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteHostedZoneRequestFilterSensitiveLog = DeleteHostedZoneRequestFilterSensitiveLog;
const DeleteHostedZoneResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteHostedZoneResponseFilterSensitiveLog = DeleteHostedZoneResponseFilterSensitiveLog;
const DeleteKeySigningKeyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteKeySigningKeyRequestFilterSensitiveLog = DeleteKeySigningKeyRequestFilterSensitiveLog;
const DeleteKeySigningKeyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteKeySigningKeyResponseFilterSensitiveLog = DeleteKeySigningKeyResponseFilterSensitiveLog;
const DeleteQueryLoggingConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteQueryLoggingConfigRequestFilterSensitiveLog = DeleteQueryLoggingConfigRequestFilterSensitiveLog;
const DeleteQueryLoggingConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteQueryLoggingConfigResponseFilterSensitiveLog = DeleteQueryLoggingConfigResponseFilterSensitiveLog;
const DeleteReusableDelegationSetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteReusableDelegationSetRequestFilterSensitiveLog = DeleteReusableDelegationSetRequestFilterSensitiveLog;
const DeleteReusableDelegationSetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteReusableDelegationSetResponseFilterSensitiveLog = DeleteReusableDelegationSetResponseFilterSensitiveLog;
const DeleteTrafficPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteTrafficPolicyRequestFilterSensitiveLog = DeleteTrafficPolicyRequestFilterSensitiveLog;
const DeleteTrafficPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteTrafficPolicyResponseFilterSensitiveLog = DeleteTrafficPolicyResponseFilterSensitiveLog;
const DeleteTrafficPolicyInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteTrafficPolicyInstanceRequestFilterSensitiveLog = DeleteTrafficPolicyInstanceRequestFilterSensitiveLog;
const DeleteTrafficPolicyInstanceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteTrafficPolicyInstanceResponseFilterSensitiveLog = DeleteTrafficPolicyInstanceResponseFilterSensitiveLog;
const DeleteVPCAssociationAuthorizationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteVPCAssociationAuthorizationRequestFilterSensitiveLog = DeleteVPCAssociationAuthorizationRequestFilterSensitiveLog;
const DeleteVPCAssociationAuthorizationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteVPCAssociationAuthorizationResponseFilterSensitiveLog = DeleteVPCAssociationAuthorizationResponseFilterSensitiveLog;
const DisableHostedZoneDNSSECRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DisableHostedZoneDNSSECRequestFilterSensitiveLog = DisableHostedZoneDNSSECRequestFilterSensitiveLog;
const DisableHostedZoneDNSSECResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DisableHostedZoneDNSSECResponseFilterSensitiveLog = DisableHostedZoneDNSSECResponseFilterSensitiveLog;
const DisassociateVPCFromHostedZoneRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DisassociateVPCFromHostedZoneRequestFilterSensitiveLog = DisassociateVPCFromHostedZoneRequestFilterSensitiveLog;
const DisassociateVPCFromHostedZoneResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DisassociateVPCFromHostedZoneResponseFilterSensitiveLog = DisassociateVPCFromHostedZoneResponseFilterSensitiveLog;
const EnableHostedZoneDNSSECRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnableHostedZoneDNSSECRequestFilterSensitiveLog = EnableHostedZoneDNSSECRequestFilterSensitiveLog;
const EnableHostedZoneDNSSECResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnableHostedZoneDNSSECResponseFilterSensitiveLog = EnableHostedZoneDNSSECResponseFilterSensitiveLog;
const GetAccountLimitRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetAccountLimitRequestFilterSensitiveLog = GetAccountLimitRequestFilterSensitiveLog;
const GetAccountLimitResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetAccountLimitResponseFilterSensitiveLog = GetAccountLimitResponseFilterSensitiveLog;
const GetChangeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetChangeRequestFilterSensitiveLog = GetChangeRequestFilterSensitiveLog;
const GetChangeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetChangeResponseFilterSensitiveLog = GetChangeResponseFilterSensitiveLog;
const GetCheckerIpRangesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetCheckerIpRangesRequestFilterSensitiveLog = GetCheckerIpRangesRequestFilterSensitiveLog;
const GetCheckerIpRangesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetCheckerIpRangesResponseFilterSensitiveLog = GetCheckerIpRangesResponseFilterSensitiveLog;
const GetDNSSECRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetDNSSECRequestFilterSensitiveLog = GetDNSSECRequestFilterSensitiveLog;
const DNSSECStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DNSSECStatusFilterSensitiveLog = DNSSECStatusFilterSensitiveLog;
const GetDNSSECResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetDNSSECResponseFilterSensitiveLog = GetDNSSECResponseFilterSensitiveLog;
const GetGeoLocationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetGeoLocationRequestFilterSensitiveLog = GetGeoLocationRequestFilterSensitiveLog;
const GeoLocationDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GeoLocationDetailsFilterSensitiveLog = GeoLocationDetailsFilterSensitiveLog;
const GetGeoLocationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetGeoLocationResponseFilterSensitiveLog = GetGeoLocationResponseFilterSensitiveLog;
const GetHealthCheckRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetHealthCheckRequestFilterSensitiveLog = GetHealthCheckRequestFilterSensitiveLog;
const GetHealthCheckResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetHealthCheckResponseFilterSensitiveLog = GetHealthCheckResponseFilterSensitiveLog;
const GetHealthCheckCountRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetHealthCheckCountRequestFilterSensitiveLog = GetHealthCheckCountRequestFilterSensitiveLog;
const GetHealthCheckCountResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetHealthCheckCountResponseFilterSensitiveLog = GetHealthCheckCountResponseFilterSensitiveLog;
const GetHealthCheckLastFailureReasonRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetHealthCheckLastFailureReasonRequestFilterSensitiveLog = GetHealthCheckLastFailureReasonRequestFilterSensitiveLog;
const StatusReportFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StatusReportFilterSensitiveLog = StatusReportFilterSensitiveLog;
const HealthCheckObservationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HealthCheckObservationFilterSensitiveLog = HealthCheckObservationFilterSensitiveLog;
const GetHealthCheckLastFailureReasonResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetHealthCheckLastFailureReasonResponseFilterSensitiveLog = GetHealthCheckLastFailureReasonResponseFilterSensitiveLog;
const GetHealthCheckStatusRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetHealthCheckStatusRequestFilterSensitiveLog = GetHealthCheckStatusRequestFilterSensitiveLog;
const GetHealthCheckStatusResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetHealthCheckStatusResponseFilterSensitiveLog = GetHealthCheckStatusResponseFilterSensitiveLog;
const GetHostedZoneRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetHostedZoneRequestFilterSensitiveLog = GetHostedZoneRequestFilterSensitiveLog;
const GetHostedZoneResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetHostedZoneResponseFilterSensitiveLog = GetHostedZoneResponseFilterSensitiveLog;
const GetHostedZoneCountRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetHostedZoneCountRequestFilterSensitiveLog = GetHostedZoneCountRequestFilterSensitiveLog;
const GetHostedZoneCountResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetHostedZoneCountResponseFilterSensitiveLog = GetHostedZoneCountResponseFilterSensitiveLog;
const GetHostedZoneLimitRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetHostedZoneLimitRequestFilterSensitiveLog = GetHostedZoneLimitRequestFilterSensitiveLog;
const HostedZoneLimitFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HostedZoneLimitFilterSensitiveLog = HostedZoneLimitFilterSensitiveLog;
const GetHostedZoneLimitResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetHostedZoneLimitResponseFilterSensitiveLog = GetHostedZoneLimitResponseFilterSensitiveLog;
const GetQueryLoggingConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetQueryLoggingConfigRequestFilterSensitiveLog = GetQueryLoggingConfigRequestFilterSensitiveLog;
const GetQueryLoggingConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetQueryLoggingConfigResponseFilterSensitiveLog = GetQueryLoggingConfigResponseFilterSensitiveLog;
const GetReusableDelegationSetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetReusableDelegationSetRequestFilterSensitiveLog = GetReusableDelegationSetRequestFilterSensitiveLog;
const GetReusableDelegationSetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetReusableDelegationSetResponseFilterSensitiveLog = GetReusableDelegationSetResponseFilterSensitiveLog;
const GetReusableDelegationSetLimitRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetReusableDelegationSetLimitRequestFilterSensitiveLog = GetReusableDelegationSetLimitRequestFilterSensitiveLog;
const ReusableDelegationSetLimitFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReusableDelegationSetLimitFilterSensitiveLog = ReusableDelegationSetLimitFilterSensitiveLog;
const GetReusableDelegationSetLimitResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetReusableDelegationSetLimitResponseFilterSensitiveLog = GetReusableDelegationSetLimitResponseFilterSensitiveLog;
const GetTrafficPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetTrafficPolicyRequestFilterSensitiveLog = GetTrafficPolicyRequestFilterSensitiveLog;
const GetTrafficPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetTrafficPolicyResponseFilterSensitiveLog = GetTrafficPolicyResponseFilterSensitiveLog;
const GetTrafficPolicyInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetTrafficPolicyInstanceRequestFilterSensitiveLog = GetTrafficPolicyInstanceRequestFilterSensitiveLog;
const GetTrafficPolicyInstanceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetTrafficPolicyInstanceResponseFilterSensitiveLog = GetTrafficPolicyInstanceResponseFilterSensitiveLog;
const GetTrafficPolicyInstanceCountRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetTrafficPolicyInstanceCountRequestFilterSensitiveLog = GetTrafficPolicyInstanceCountRequestFilterSensitiveLog;
const GetTrafficPolicyInstanceCountResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetTrafficPolicyInstanceCountResponseFilterSensitiveLog = GetTrafficPolicyInstanceCountResponseFilterSensitiveLog;
const ListCidrBlocksRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListCidrBlocksRequestFilterSensitiveLog = ListCidrBlocksRequestFilterSensitiveLog;
const CidrBlockSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CidrBlockSummaryFilterSensitiveLog = CidrBlockSummaryFilterSensitiveLog;
const ListCidrBlocksResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListCidrBlocksResponseFilterSensitiveLog = ListCidrBlocksResponseFilterSensitiveLog;
const ListCidrCollectionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListCidrCollectionsRequestFilterSensitiveLog = ListCidrCollectionsRequestFilterSensitiveLog;
const CollectionSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CollectionSummaryFilterSensitiveLog = CollectionSummaryFilterSensitiveLog;
const ListCidrCollectionsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListCidrCollectionsResponseFilterSensitiveLog = ListCidrCollectionsResponseFilterSensitiveLog;
const ListCidrLocationsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListCidrLocationsRequestFilterSensitiveLog = ListCidrLocationsRequestFilterSensitiveLog;
const LocationSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LocationSummaryFilterSensitiveLog = LocationSummaryFilterSensitiveLog;
const ListCidrLocationsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListCidrLocationsResponseFilterSensitiveLog = ListCidrLocationsResponseFilterSensitiveLog;
const ListGeoLocationsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListGeoLocationsRequestFilterSensitiveLog = ListGeoLocationsRequestFilterSensitiveLog;
const ListGeoLocationsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListGeoLocationsResponseFilterSensitiveLog = ListGeoLocationsResponseFilterSensitiveLog;
const ListHealthChecksRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListHealthChecksRequestFilterSensitiveLog = ListHealthChecksRequestFilterSensitiveLog;
const ListHealthChecksResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListHealthChecksResponseFilterSensitiveLog = ListHealthChecksResponseFilterSensitiveLog;
const ListHostedZonesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListHostedZonesRequestFilterSensitiveLog = ListHostedZonesRequestFilterSensitiveLog;
const ListHostedZonesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListHostedZonesResponseFilterSensitiveLog = ListHostedZonesResponseFilterSensitiveLog;
const ListHostedZonesByNameRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListHostedZonesByNameRequestFilterSensitiveLog = ListHostedZonesByNameRequestFilterSensitiveLog;
const ListHostedZonesByNameResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListHostedZonesByNameResponseFilterSensitiveLog = ListHostedZonesByNameResponseFilterSensitiveLog;
const ListHostedZonesByVPCRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListHostedZonesByVPCRequestFilterSensitiveLog = ListHostedZonesByVPCRequestFilterSensitiveLog;
const HostedZoneOwnerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HostedZoneOwnerFilterSensitiveLog = HostedZoneOwnerFilterSensitiveLog;
const HostedZoneSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HostedZoneSummaryFilterSensitiveLog = HostedZoneSummaryFilterSensitiveLog;
const ListHostedZonesByVPCResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListHostedZonesByVPCResponseFilterSensitiveLog = ListHostedZonesByVPCResponseFilterSensitiveLog;
const ListQueryLoggingConfigsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListQueryLoggingConfigsRequestFilterSensitiveLog = ListQueryLoggingConfigsRequestFilterSensitiveLog;
const ListQueryLoggingConfigsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListQueryLoggingConfigsResponseFilterSensitiveLog = ListQueryLoggingConfigsResponseFilterSensitiveLog;
const ListResourceRecordSetsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListResourceRecordSetsRequestFilterSensitiveLog = ListResourceRecordSetsRequestFilterSensitiveLog;
const ListResourceRecordSetsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListResourceRecordSetsResponseFilterSensitiveLog = ListResourceRecordSetsResponseFilterSensitiveLog;
const ListReusableDelegationSetsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListReusableDelegationSetsRequestFilterSensitiveLog = ListReusableDelegationSetsRequestFilterSensitiveLog;
const ListReusableDelegationSetsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListReusableDelegationSetsResponseFilterSensitiveLog = ListReusableDelegationSetsResponseFilterSensitiveLog;
const ListTagsForResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsForResourceRequestFilterSensitiveLog = ListTagsForResourceRequestFilterSensitiveLog;
const ResourceTagSetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResourceTagSetFilterSensitiveLog = ResourceTagSetFilterSensitiveLog;
const ListTagsForResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsForResourceResponseFilterSensitiveLog = ListTagsForResourceResponseFilterSensitiveLog;
const ListTagsForResourcesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsForResourcesRequestFilterSensitiveLog = ListTagsForResourcesRequestFilterSensitiveLog;
const ListTagsForResourcesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsForResourcesResponseFilterSensitiveLog = ListTagsForResourcesResponseFilterSensitiveLog;
const ListTrafficPoliciesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTrafficPoliciesRequestFilterSensitiveLog = ListTrafficPoliciesRequestFilterSensitiveLog;
const TrafficPolicySummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TrafficPolicySummaryFilterSensitiveLog = TrafficPolicySummaryFilterSensitiveLog;
const ListTrafficPoliciesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTrafficPoliciesResponseFilterSensitiveLog = ListTrafficPoliciesResponseFilterSensitiveLog;
const ListTrafficPolicyInstancesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTrafficPolicyInstancesRequestFilterSensitiveLog = ListTrafficPolicyInstancesRequestFilterSensitiveLog;
const ListTrafficPolicyInstancesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTrafficPolicyInstancesResponseFilterSensitiveLog = ListTrafficPolicyInstancesResponseFilterSensitiveLog;
const ListTrafficPolicyInstancesByHostedZoneRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTrafficPolicyInstancesByHostedZoneRequestFilterSensitiveLog = ListTrafficPolicyInstancesByHostedZoneRequestFilterSensitiveLog;
const ListTrafficPolicyInstancesByHostedZoneResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTrafficPolicyInstancesByHostedZoneResponseFilterSensitiveLog = ListTrafficPolicyInstancesByHostedZoneResponseFilterSensitiveLog;
const ListTrafficPolicyInstancesByPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTrafficPolicyInstancesByPolicyRequestFilterSensitiveLog = ListTrafficPolicyInstancesByPolicyRequestFilterSensitiveLog;
const ListTrafficPolicyInstancesByPolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTrafficPolicyInstancesByPolicyResponseFilterSensitiveLog = ListTrafficPolicyInstancesByPolicyResponseFilterSensitiveLog;
const ListTrafficPolicyVersionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTrafficPolicyVersionsRequestFilterSensitiveLog = ListTrafficPolicyVersionsRequestFilterSensitiveLog;
const ListTrafficPolicyVersionsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTrafficPolicyVersionsResponseFilterSensitiveLog = ListTrafficPolicyVersionsResponseFilterSensitiveLog;
const ListVPCAssociationAuthorizationsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListVPCAssociationAuthorizationsRequestFilterSensitiveLog = ListVPCAssociationAuthorizationsRequestFilterSensitiveLog;
const ListVPCAssociationAuthorizationsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListVPCAssociationAuthorizationsResponseFilterSensitiveLog = ListVPCAssociationAuthorizationsResponseFilterSensitiveLog;
const TestDNSAnswerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TestDNSAnswerRequestFilterSensitiveLog = TestDNSAnswerRequestFilterSensitiveLog;
const TestDNSAnswerResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TestDNSAnswerResponseFilterSensitiveLog = TestDNSAnswerResponseFilterSensitiveLog;
const UpdateHealthCheckRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateHealthCheckRequestFilterSensitiveLog = UpdateHealthCheckRequestFilterSensitiveLog;
const UpdateHealthCheckResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateHealthCheckResponseFilterSensitiveLog = UpdateHealthCheckResponseFilterSensitiveLog;
const UpdateHostedZoneCommentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateHostedZoneCommentRequestFilterSensitiveLog = UpdateHostedZoneCommentRequestFilterSensitiveLog;
const UpdateHostedZoneCommentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateHostedZoneCommentResponseFilterSensitiveLog = UpdateHostedZoneCommentResponseFilterSensitiveLog;
const UpdateTrafficPolicyCommentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateTrafficPolicyCommentRequestFilterSensitiveLog = UpdateTrafficPolicyCommentRequestFilterSensitiveLog;
const UpdateTrafficPolicyCommentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateTrafficPolicyCommentResponseFilterSensitiveLog = UpdateTrafficPolicyCommentResponseFilterSensitiveLog;
const UpdateTrafficPolicyInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateTrafficPolicyInstanceRequestFilterSensitiveLog = UpdateTrafficPolicyInstanceRequestFilterSensitiveLog;
const UpdateTrafficPolicyInstanceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateTrafficPolicyInstanceResponseFilterSensitiveLog = UpdateTrafficPolicyInstanceResponseFilterSensitiveLog;
