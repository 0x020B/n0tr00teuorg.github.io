import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@aws-sdk/types";
import {
  GetQueryLoggingConfigRequest,
  GetQueryLoggingConfigResponse,
} from "../models/models_0";
import {
  Route53ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../Route53Client";
export interface GetQueryLoggingConfigCommandInput
  extends GetQueryLoggingConfigRequest {}
export interface GetQueryLoggingConfigCommandOutput
  extends GetQueryLoggingConfigResponse,
    __MetadataBearer {}
export declare class GetQueryLoggingConfigCommand extends $Command<
  GetQueryLoggingConfigCommandInput,
  GetQueryLoggingConfigCommandOutput,
  Route53ClientResolvedConfig
> {
  readonly input: GetQueryLoggingConfigCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetQueryLoggingConfigCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: Route53ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    GetQueryLoggingConfigCommandInput,
    GetQueryLoggingConfigCommandOutput
  >;
  private serialize;
  private deserialize;
}
