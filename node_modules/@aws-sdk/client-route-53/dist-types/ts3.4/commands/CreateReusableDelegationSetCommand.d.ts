import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@aws-sdk/types";
import {
  CreateReusableDelegationSetRequest,
  CreateReusableDelegationSetResponse,
} from "../models/models_0";
import {
  Route53ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../Route53Client";
export interface CreateReusableDelegationSetCommandInput
  extends CreateReusableDelegationSetRequest {}
export interface CreateReusableDelegationSetCommandOutput
  extends CreateReusableDelegationSetResponse,
    __MetadataBearer {}
export declare class CreateReusableDelegationSetCommand extends $Command<
  CreateReusableDelegationSetCommandInput,
  CreateReusableDelegationSetCommandOutput,
  Route53ClientResolvedConfig
> {
  readonly input: CreateReusableDelegationSetCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateReusableDelegationSetCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: Route53ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    CreateReusableDelegationSetCommandInput,
    CreateReusableDelegationSetCommandOutput
  >;
  private serialize;
  private deserialize;
}
