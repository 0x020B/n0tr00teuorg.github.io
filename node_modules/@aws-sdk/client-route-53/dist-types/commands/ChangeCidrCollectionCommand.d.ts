import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ChangeCidrCollectionRequest, ChangeCidrCollectionResponse } from "../models/models_0";
import { Route53ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../Route53Client";
export interface ChangeCidrCollectionCommandInput extends ChangeCidrCollectionRequest {
}
export interface ChangeCidrCollectionCommandOutput extends ChangeCidrCollectionResponse, __MetadataBearer {
}
/**
 * <p>Creates, changes, or deletes CIDR blocks within a collection. Contains authoritative
 * 			IP information mapping blocks to one or multiple locations.</p>
 * 		       <p>A change request can update multiple locations in a collection at a time, which is
 * 			helpful if you want to move one or more CIDR blocks from one location to another in one
 * 			transaction, without downtime. </p>
 * 		       <p>
 *             <b>Limits</b>
 *          </p>
 * 		       <p>The max number of CIDR blocks included in the request is 1000. As a result, big updates
 * 			require multiple API calls.</p>
 * 		       <p>
 *             <b> PUT and DELETE_IF_EXISTS</b>
 *          </p>
 * 		       <p>Use <code>ChangeCidrCollection</code> to perform the following actions:</p>
 * 		       <ul>
 *             <li>
 * 				           <p>
 *                   <code>PUT</code>: Create a CIDR block within the specified collection.</p>
 * 			         </li>
 *             <li>
 * 				           <p>
 *                   <code> DELETE_IF_EXISTS</code>: Delete an existing CIDR block from the
 * 					collection.</p>
 * 			         </li>
 *          </ul>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { Route53Client, ChangeCidrCollectionCommand } from "@aws-sdk/client-route-53"; // ES Modules import
 * // const { Route53Client, ChangeCidrCollectionCommand } = require("@aws-sdk/client-route-53"); // CommonJS import
 * const client = new Route53Client(config);
 * const command = new ChangeCidrCollectionCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link ChangeCidrCollectionCommandInput} for command's `input` shape.
 * @see {@link ChangeCidrCollectionCommandOutput} for command's `response` shape.
 * @see {@link Route53ClientResolvedConfig | config} for Route53Client's `config` shape.
 *
 */
export declare class ChangeCidrCollectionCommand extends $Command<ChangeCidrCollectionCommandInput, ChangeCidrCollectionCommandOutput, Route53ClientResolvedConfig> {
    readonly input: ChangeCidrCollectionCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    constructor(input: ChangeCidrCollectionCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: Route53ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ChangeCidrCollectionCommandInput, ChangeCidrCollectionCommandOutput>;
    private serialize;
    private deserialize;
}
