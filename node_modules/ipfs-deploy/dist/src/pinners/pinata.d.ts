export = Pinata;
declare class Pinata {
    static get displayName(): string;
    static get slug(): string;
    /**
     * @param {PinataOptions} options
     */
    constructor({ apiKey, secretApiKey }: PinataOptions);
    auth: {
        pinata_api_key: string;
        pinata_secret_api_key: string;
    };
    /**
     * @param {string} dir
     * @param {PinDirOptions|undefined} options
     * @returns {Promise<string>}
     */
    pinDir(dir: string, { tag, hidden }?: PinDirOptions | undefined): Promise<string>;
    /**
     * @param {string} cid
     * @param {string|undefined} tag
     * @returns {Promise<void>}
     */
    pinCid(cid: string, tag: string | undefined): Promise<void>;
    /**
     * @param {string} cid
     * @returns string
     */
    gatewayUrl(cid: string): string;
    get displayName(): string;
}
declare namespace Pinata {
    export { PinataOptions, PinDirOptions };
}
type PinDirOptions = import('./types').PinDirOptions;
type PinataOptions = import('./types').PinataOptions;
//# sourceMappingURL=pinata.d.ts.map