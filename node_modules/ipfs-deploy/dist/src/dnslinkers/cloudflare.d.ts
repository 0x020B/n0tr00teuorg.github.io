export = Cloudflare;
/**
 * @typedef {import('./types').DNSRecord} DNSRecord
 * @typedef {import('./types').CloudflareOptions} CloudflareOptions
 */
declare class Cloudflare {
    static get displayName(): string;
    static get slug(): string;
    /**
     * @param {CloudflareOptions} options
     */
    constructor({ apiEmail, apiKey, apiToken, zone, record }: CloudflareOptions);
    api: {
        token: string | undefined;
        email?: undefined;
        key?: undefined;
    } | {
        email: string | undefined;
        key: string | undefined;
        token?: undefined;
    };
    opts: {
        record: string;
        zone: string;
    };
    /**
     * @param {string} cid
     * @returns {Promise<DNSRecord>}
     */
    link(cid: string): Promise<DNSRecord>;
    get displayName(): string;
}
declare namespace Cloudflare {
    export { DNSRecord, CloudflareOptions };
}
type DNSRecord = import('./types').DNSRecord;
type CloudflareOptions = import('./types').CloudflareOptions;
//# sourceMappingURL=cloudflare.d.ts.map